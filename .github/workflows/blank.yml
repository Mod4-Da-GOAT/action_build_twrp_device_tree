name: Make TWRP Device

on:
  workflow_dispatch:
    inputs:
      IMG_URL:
        description: 'Link to boot or recovery image (.img, .img.lz4, .tar.md5, .tar)'
        required: true
        default: ''

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest

    steps:
    - name: Check Out repository
      uses: actions/checkout@v4

    - name: Prepare environment
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y python3 python3-pip cpio wget zip aria2 lz4 file git bash tar curl unzip
        pip install --upgrade pip
        pip install twrpdtgen
        mkdir -p dt img tools

    - name: Download MagiskBoot (for Samsung ELF images)
      run: |
        cd tools
        # Get the latest magiskboot from the Magisk repo
        curl -L -o magiskboot.zip https://github.com/topjohnwu/magiskboot/releases/latest/download/magiskboot.zip || true
        if [ ! -f magiskboot.zip ]; then
          echo "MagiskBoot release archive not found, falling back to building manually..."
          curl -L -o magiskboot https://raw.githubusercontent.com/topjohnwu/magisk/master/scripts/magiskboot
          chmod +x magiskboot
        else
          unzip -o magiskboot.zip || true
          chmod +x magiskboot || true
        fi
        ls -lh
        cd ..

    - name: Download firmware/image
      run: |
        echo "Downloading from: ${{ github.event.inputs.IMG_URL }}"
        cd img
        aria2c -x 16 -s 16 "${{ github.event.inputs.IMG_URL }}" || exit 1
        ls -lh
        cd ..

    - name: Detect and fix ELF boot images
      run: |
        cd img
        FILE=$(find . -type f -name "*.img" | head -n 1)
        if [ -z "$FILE" ]; then
          echo "❌ No .img file found."
          exit 1
        fi

        echo "Checking image type..."
        file "$FILE"
        if file "$FILE" | grep -q "ELF"; then
          echo "⚙️ ELF detected — using magiskboot to unpack..."
          ../tools/magiskboot unpack "$FILE" || {
            echo "❌ magiskboot failed to unpack ELF image."
            exit 1
          }
          if [ -f "kernel" ] && [ -f "ramdisk.cpio" ]; then
            echo "Successfully unpacked ELF image."
            # Rebuild into a standard boot.img
            ../tools/magiskboot repack "$FILE" fixed_boot.img || exit 1
            mv fixed_boot.img fixed.img
            rm -f kernel ramdisk.cpio
            echo "✅ Repacked ELF image into fixed.img"
          else
            echo "❌ magiskboot unpack didn't produce valid files."
            exit 1
          fi
        fi
        cd ..

    - name: Generate TWRP device tree
      run: |
        IMG_PATH=$(find img -type f -name "*.img" | head -n 1)
        echo "Generating device tree from $IMG_PATH"
        if [ -z "$IMG_PATH" ]; then
          echo "❌ No valid image found to process."
          exit 1
        fi
        python3 -m twrpdtgen -o dt/ "$IMG_PATH" || {
          echo "❌ twrpdtgen failed. Printing diagnostics..."
          ls -lh img
          file img/*
          exit 1
        }

    - name: Create ZIP
      run: |
        zip -r DeviceTree.zip dt

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: DeviceTree.zip
        name: TWRP_Device_Tree-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: Generated TWRP device tree (with ELF handling)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
